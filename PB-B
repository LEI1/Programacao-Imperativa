int distances_all(Point *a, int n, int k, double *b)
{
  int result = 0;
  for (int i = 0; i < n; i++)
  {
    if (k != i)
    b[result++] = distance(a[k], a[i]);
  }
  return result;
}

int reliable(Point *a, int n, int k)
{
  double b[10000];
  distances_all(a, n, k, b);
  int min = doubles_min(b, n);
  int z = doubles_count(b, n, min);
  if (z <= 1)
  {
    return 1;
  }
  else
  {
    return 0;
  }
}


int reliable_all(Point *a, int n, Point *c)
{
  int result = 0;
  for(int i = 0; i < n; i++)
    {
    if(reliable(a, n, i) == 0)
      c[result++] = a[i];
    }
  return result;
}

void points_distance(char* filename)
{
	
  Point a[10000];
  Point c[10000];
  int n = points_read(stdin, a);
  int l = reliable_all(a, n, c);
  printf("%d\n", l);
  points_isort_by_x_y(c, l);
  points_fprintfln(stdout, c, l, "%d %d\n");
}



// MAIN

int main (int argc, char **argv){

	points_distance(argv[1]);

	return 0;
}
